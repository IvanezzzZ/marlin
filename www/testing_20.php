<!DOCTYPE html>
<html>
<head>
    <title>Тестирование 20</title>
    <meta charset="utf-8">
</head>
<body>

<h5>1. Как правильно настроить форму для отправки данных в обработчик? Какие атрибуты прописать, какие значения?</h5>

- action="" - указываем какой файл будет обрабатывать форму, method="post" - метод передачи данных.
Для форм всегда пост, иначе если будет метод GET в адресной строке будут видны передаваемые параметры.
enctype="multipart/form-data" - чтобы была возможность отправляять файлы

<h5>2. Что такое обработчик? Какую задачу он решает? А зачем выделять его в отдельный файл? В чем польза такого подхода?</h5>

- Обработчик - это отдельный файл, который обрабатывает данные из формы. Если не использовать обработчик, то придется обрабатывать данные
из формы в том же файле, где и сама форма - это не круто т.к. получится "каша" из кода, код будет
трудно читать и поддерживать.

<h5>3. Какие методы бывают отправки данных через форму? В чем их разница? В каком случае использовать один, а когда другой?</h5>

- POST и GET. Разница в том, что при использованиее метода ГЕТ данные из формы будут показаны в адресной строке,
это небезопасно, так можно отправлять только не конфедициальные данные, например ID фотографии, которую хотим удалить.
При использовании метода пост введенных пользователем данных не будет в адресной строке, это безопасно.
Метод ПОСТ используют для отправки конфедициальных данных (пароль, почта и т.д.)

<h5>4. Опишите процесс записи строки в базу данных: как подключиться, подготовить запрос и выполнить</h5>

<ol>
    <li>Создать базу и таблицу</li>
    <li>Создать обьект класса PDO для подключения к БД (драйвер БД, host, логин и пароль для подключения к БД)</li>
    <li>Подготовка запроса с помощью метода prepare("ЗАПРОС") подготовка делается для предотвращения SQl - иньекции</li>
    <li>Выполеяется запрос с помощью метода execute("МАССИВ С ПАРАМЕТРАМИ ДЛЯ ВЫПОЛНЕНИЯ ЗАПРОСА")</li>
    <li>Если запрос был на получение данных из БД, то используем метод fetch или fetchAll и записываем результат в какую-нибудь переменную</li>
</ol>

<h5>5. Какой глобальный массив используется при создании флеш-сообщений?</h5>

- $_SESSION

<h5>6. Опишите пошагово как создать и вывести флеш-сообщение</h5>

<ol>
    <li>В самом начале файлов, в которых будут использоваться или создаваться сесссии ОБЯЗАТЕЛЬНО прописать session_start() иначе разработчика ждёт разочарование</li>
    <li>После завершения куска кода, который выполнял какое-то действие и нам необходимо сообщить о результате - создаем $_SESSION['msg']</li>
    <li>В месте, где необходимо отобразить сообщение о выполнении какого-либо действия вставляем ранее созданное флеш сообщение $_SESSION['msg']</li>
</ol>

<h5>7. Как проверить текст на формат эл. адреса средствами php?</h5>

- с помощью функции filter_var($email, FILTER_VALIDATE_EMAIL)

<h5>8. Какие функции используются для генерации пароля и его проверку?</h5>

- password_hash() - шифрует пароль. Т.е. какой-бы пароль не ввел пользователь - он будет изменем в строку из 60 случайных символов<br>
- password_verify() - сравнивает только что введенный пароль пользователя с тем паролем, который хранится в БД вместе с введенным пользователем емэйлом

<h5>9. Почему важно сохранять пароль в виде хэша? Почему не рекомендуется хранить пароль в открытом виде?</h5>

- Потому что если кто-то взломает БД а пароли не будут захэшированы - взломщики получат доступы к аккаунтам пользователей

<h5>10. Напишите какая есть особенность у веб-сервера которую покрывает Сессия? Иными словами, зачем нужна Сессия?</h5>

- Сессия - это время, когда у пользователя запущен браузер. Сессия может хранить в себе какую-либо информацию,
которая будет необходима для хранения временной информации о пользователе или о его действиях

<h5>11. Опишите пошагово реализацию функционала Аутентификации(входа в систему).</h5>

<ol>
    <li>Настроить форму (указать обработчик, метод передачи данных)</li>
    <li>Валидация данных в обработчике (были ли в форме введены данные)</li>
    <li>Поиск в БД юзера по логину\почте</li>
    <li>Если юзер нашелся - сравниваем введенный юзером пароль с паролем в БД с помощью password_verify()</li>
    <li>Переводим пользователя на страницу профиля</li>
</ol>

<h5>12. Какая есть особенность настройки формы для загрузки файлов?</h5>

- для загрузки файлов НЕОБХОДИМО внутри открывающего тега form указать атрибут enctype со значением multipart/form-data,
а в инпуте указать type="file" чтобы появилось поле для загрузки файл

<h5>13. Какое значение должно быть у инпута для множественной загрузки файлов?</h5>

- multiple

<h5>14. Как создать уникальное название файла?</h5>

- uniqid() + расширение файла (в качестве названия будет просто набор символов)
- time() + расширение файла (в качестве названия файла будет временная метка в формате timestamp)

<h5>15. Напишите названия функций для загрузки файла, проверки существует ли файл в папке, удаления файла</h5>

- move_uploaded_file() - загрузка
- file_exist() проверка существования файла
- unlink() - удаление файла

<h5>16. Какой глобальный массив хранит все файлы передаваемые через форму?</h5>

$_FILES

<h5>17. Опишите структуру глобального массива хранящего файлы: какие имеет ключи и значения</h5>

'name' => текущее имя файла
'tmp_name' => временной имя файла на сервере
'type' => расщирение файла
'size' => размер файла в байтах
'error' => код ошибки при загрузке файла (если ошибок нет - код 0)

<h5>18. Помогите человеку решить задачу. «Пользователь загрузил файл и нажимает отправить. Он ожидает, что файл сохранится в папку, а название в базу. Файл сохраняется в папку, но в базу название не сохраняется» В чем может быть ошибка?</h5>

<ul>
    <li>Неправильное подключение к БД</li>
    <li>Ошибка в самом запросе</li>
    <li>В БД в колонке с названием может быть указан неверный тип (например указан тип int, и в названии мы передаем строку)</li>
</ul>

<h5>19. Помогите человеку решить задачу. «Создал массив элементов, и хочу вывести при помощи цикла. Вроде бы все написал, но выходит ошибка: illegal offset type» Что нужно сделать, чтобы решить эту проблему?</h5>

Проблема в том, что в качестве ключа указан массив (число в квадратных скобок). Нужно убрать квадратные скобки

<h5>20. Что означает эта ошибка. «Parse error Unexpected (, expected ;» Что нужно сделать, чтобы избавить от ошибки?</h5>

В каком-то месте забыли поставить точку с запятой, либо поставили не в том месте.
Нужно пройтись по коду и найти это место

<h5>21. Помогите человеку решить задачу. «Создал форму с инпутом. Пишу текст и отправляю. В обработчике $_POST пустой» В чем может быть ошибка?</h5>

В тебе form отсутствует атрибут action
Данные передаются методом GET, а не POST
В атрибуте action не указан обработчик, либо указан неверно
В элементе с кнопкой указан type button, а не submit

<h5>22. Чем технически отличается глобальный массив от обычного массива?</h5>

Глобальный массив по умолчанию существует, т.е. его не нужно создавать и он доступен в любом месте кода

<h5>23. Дайте человеку совет. Он говорит: «Когда я пишу код, я не обращаю внимания на названия переменных, функций и массивов. Для меня все и так понятно. Поэтому я даю короткие названия, типа $a, $b, $smth. Но потом, понимаю, что мне тяжело ориентироваться в них»</h5>

На написании кода работа программиста над проектом не заканчивается. После написания кода проект придется поддерживать
(добавлять новый функционал, изменять существующий, фиксить баги т.д.) и рано или поздно твой код будеть читать другие программисты.
А если даже тебе самому непонятно что происходит в ТВОЁМ коде, то другие программисты тем более не поймут.
Код должен быть написан так, чтобы без дополнительных комментариев было понятно, что в коде происходит.
В первую очередь это достигается тем, что подбираются понятные названия
для переменных, классов, методов и т.д. Это неотьемлемая часть работы, которой нужно уделять время.

<h5>24. Дайте человеку совет. Он говорит: «Хочу самостоятельно написать регистрацию и авторизацию. Приступаю и у меня ступор: не знаю с чего начать. Вроде бы понимаю, что регистрация — это добавление пользователя в базу, но не понимаю с чего начинать?»</h5>

Не нужно кидаться сразу писать код. Сначала нужно посидеть и ПОДУАТЬ какие шаги мне нужно сделать, чтобы реализовать проект.
И провести такую же процедуру над каждым выписанным шагом. Т.е. разбить одну большую задачу (СДЕЛАТЬ РЕГИСТРАЦИЯ И АВТОРИЗАЦИЮ)
на кучу маленьких (написать форму регистрации, создать обработчик, сделать запрос в БД, подготовить запрос, сделать валидацию данных).
И конечно же необходимо тестировать каждый этап разработки, например, с помщью var_dump($_POST) проверить отправляются ли данных в обработчик и т.д

<h5>25. Объясните человеку в чем разница между $_SESSION и $_COOKIE: «Не пойму в чем разница между сессией и куки? Вроде бы одно и то же…пока полностью не осознал.»</h5>

КУКА хранится в браузере пользователя и живет она строго определенное время, после она удаляется, а СЕССИЯ живет пока открыт браузер и пользователь совершает какие-то действия
В куке может храниться очень мало информации, а СЕССИИ гораздо бОльшие обьемы данных.
СЕССИЯ по сути нужна для сохранения состояния пользователя ТОЛЬКО по время сеанса посещения сайта.
А КУКИ сохраняют состояние пользователя долго время даже после закрытия браузера. Например, можно авторизоваться на каком-либо сайте,
закрыть браузер, зайти на этот сайт через неделю и ся буду СРАЗУ авторизован. Это достигается тем, что кода я зарегестрировался - в браузере
сохранилась КУКА, в которой хранится информация о том, что я авторизован. И при каждом новом заходе на сайт сервер будет
запрашивать у браузера КУКУ об авторизации. Если КУКА найдена - я буду сразу авторизован, если нет - придется авторизоваться снова.


<h5>26. Дайте человеку совет. Он говорит: «Скачал кучу курсов. По одним названиям можно понять, что я скоро точно стану программистом. Но сколько бы я не смотрел, у меня не получается самостоятельно написать даже простенький скрипт. Что я делаю не так? Как надо подходить к обучению?»</h5>

Во первых нужно не просто смотреть, а повторять, и не просто повторять, а постораться ПОНЯТЬ ЧТО ПРОИСХОДИТ.
Для каких целей нужна та или иная функция. Только после понимания нужно стараться самостоятельно по памяти стараться
запомнить как пишутся какие-либо конструкции и стараться самостоятельно практиковаться.

<h5>27. Какие у вас впечатления от первой части практики?</h5>

Впечатления супер. Очень круто, что нужно работать с готовым фронтОм. Знания собрались в кучу.
90% заданий я решил сам и получал удовольствие от написания кода. Если это действительно те 20% знаний, навыков,
которые дадут 80% результата на первой работе - то я в восторге)



</body>
</html>

